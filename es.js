self.uceDragonbinder=function(e){"use strict";return e.getConnectedObj=e=>{const{state:t,getters:s}=e;return{store:e,state:t,getters:s,commit(t,...s){e.commit(t,...s)},dispatch:(t,...s)=>new Promise(r=>{e.dispatch(t,...s).then(()=>r())}),subscribeToStore(){const{renderOn:t}=this.dataset;if(t){const s=t.split(",");this.unsubscribeToStore=e.on("set",(e,t)=>{s.includes(t)&&this.render()})}else this.unsubscribeToStore=e.on("set",()=>this.render())},connected(){this.subscribeToStore()},disconnected(){this.unsubscribeToStore()}}},e}({}).default;
